#!/usr/bin/env python3
# =========================================================================== #

from typing import List
import sys

# 'argN=PPPP' -> 'PPPP'
def parsePort(arg: str) -> str:           return arg.split('=')[-1]

# 'argN=A.A.A.A:PPPP' -> ['A.A.A.A', 'PPPP']
def parseAddrPort(arg: str) -> List[str]: return arg.split('=')[-1].split(':')

# Compiles msg.proto into msg_pb2.py and msg_pb2_grpc.py
def compile_proto():
    from pathlib import Path
    from grpc_tools import protoc

    rootPath        = '.'
    srcPath         = f'{rootPath}/src'
    protoPath       = f'{srcPath}/proto'
    python_out      = f'{rootPath}'
    grpc_python_out = f'{rootPath}'
    protoFiles      = [str(p) for p in Path(f'{protoPath}').glob('*.proto')]

    protoc.main(('',
                 f'--mypy_out={rootPath}',
                 f'-I{srcPath}',
                 f'--python_out={python_out}',
                 f'--grpc_python_out={grpc_python_out}',
                 *protoFiles,
    ))


if __name__ == '__main__':

    prog = sys.argv[1] if len(sys.argv) > 1 else None

    if prog == 'svc_arm':
        from src.server import ServerManager
        serv_port = parsePort(sys.argv[2])
        sm = ServerManager(mode=prog, port=serv_port)
        sm.serve()

    elif prog == 'cln_arm':
        from src.client import ClientApp
        serv_addr, serv_port = parseAddrPort(sys.argv[2])
        client = ClientApp(mode=prog)
        client.run(ip=serv_addr, port=serv_port)

    elif prog == 'svc_comp':
        from src.server import ServerManager
        serv_port            = parsePort(sys.argv[2])
        siga_addr, siga_port = parseAddrPort(sys.argv[3])
        matr_addr, matr_port = parseAddrPort(sys.argv[4])
        sm = ServerManager(mode=prog, port=serv_port,
                           addrSiga=siga_addr, portSiga=siga_port,
                           addrMatr=matr_addr, portMatr=matr_port)
        sm.serve()

    elif prog == 'cln_comp':
        from src.client import ClientApp
        serv_addr, serv_port = parseAddrPort(sys.argv[2])
        client = ClientApp(mode=prog)
        client.run(ip=serv_addr, port=serv_port)

    elif prog == 'compile_proto': compile_proto()

    else: sys.exit(f'Invalid program: {prog}')


# =========================================================================== #
